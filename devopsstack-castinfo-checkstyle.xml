<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
    http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
    http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).

    Most Checks are configurable, be sure to consult the documentation.

    To completely disable a check, just comment it out or delete it from the file.

    Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <property name="severity" value="warning" />
    <property name="charset" value="UTF-8" />

    <!-- PARA //CHECKSTYLE:OFF <module name="SuppressionCommentFilter"/> se tiene que activar tambien FileContentsHolder -->
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that a package-info.java file exists for each package. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!-- <module name="JavadocPackage" /> -->

    <!-- Checks whether files end with a new line. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <!--
        <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf_cr_crlf" />
        </module>
    -->

    <!-- Checks that property files contain the same keys. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation" />

    <!-- Checks for Size Violations. -->
    <!-- See http://checkstyle.sourceforge.net/config_sizes.html#FileLength -->
    <module name="FileLength">
        <property name="max" value="750" />
    </module>

    <!-- Checks for whitespace -->
    <!-- See http://checkstyle.sourceforge.net/config_whitespace.html#FileTabCharacter -->
    <module name="FileTabCharacter" />

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sourceforge.net/config_regexp.html#RegexpSingleline -->
    <!--
        <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
        </module>
    -->
    <!-- Checks for Headers -->
    <!-- See http://checkstyle.sf.net/config_header.html -->
    <!-- <module name="Header"> -->
    <!-- <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!-- <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->


    <module name="TreeWalker">

        <!-- <module name="FileContentsHolder"/> -->

        <!-- Checks for Javadoc comments. -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!-- <module name="JavadocMethod"> -->
        <!-- <property name="logLoadErrors" value="true"/> -->
        <!-- <property name="suppressLoadErrors" value="true"/> -->
        <!-- </module> -->
        <module name="JavadocType">
            <property name="scope" value="public" />
        </module>
        <!-- Para sólo validar que haya comentarios en los métodos públicos. -->
        <module name="JavadocMethod">
            <property name="scope" value="public" />
            <property name="logLoadErrors" value="true" />
            <property name="suppressLoadErrors" value="true" />
            <property name="validateThrows" value="true" />
            <property name="allowMissingThrowsTags" value="true" />
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>
        <!-- Para solo validar que haya comentarios en los métodos públicos y además ignorar los LOGGER. -->
        <module name="JavadocVariable">
            <property name="scope" value="public" />
        </module>
        <!-- Para que la primera frase del comentario termine en punto. -->
        <module name="JavadocStyle">
            <property name="scope" value="public" />
            <property name="checkFirstSentence" value="true" />
            <property name="checkEmptyJavadoc" value="true" />
        </module>

        <!-- Checks for Naming Conventions. -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport" />
        <!-- defaults to sun.* packages -->
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Checks for Size Violations. -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="120" />
            <property name="ignorePattern" value="import|package|@|//" />
        </module>
        <!-- <module name="MethodLength"> -->
        <!-- <property name="max" value="60"/> -->
        <!-- <property name="countEmpty" value="false"/> -->
        <!-- </module> -->
        <module name="JavaNCSS">
            <property name="methodMaximum" value="60" />
        </module>

        <module name="ParameterNumber">
            <property name="max" value="10" />
            <property name="tokens" value="METHOD_DEF" />
        </module>

        <!-- Checks for whitespace -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad" />
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <!--
            <module name="NoWhitespaceAfter"/>
            <module name="NoWhitespaceBefore"/>
        -->
        <module name="OperatorWrap" />
        <!-- <module name="ParenPad"/> -->
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />

        <!-- Modifier Checks -->
        <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Checks for blocks. You know, those {}'s -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock" />
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />

        <!-- Checks for common coding problems -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals" />
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <!-- <module name="HiddenField"> -->
        <!-- <property name="ignoreSetter" value="true"/> -->
        <!-- </module> -->
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment" />
        <!-- <module name="MagicNumber"/> -->
        <module name="MissingSwitchDefault" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Checks for class design -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <module name="FinalClass" />
        <!-- <module name="HideUtilityClassConstructor"/> -->
        <!-- <module name="InterfaceIsType"/> -->
        <module name="VisibilityModifier" />

        <!-- Miscellaneous other checks. -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <module name="FinalParameters" />
        <module name="TodoComment" />
        <module name="UpperEll" />

        <!-- No SunCode, nuevas decididas por arquitectura eBusiness MANGO -->

        <module name="CyclomaticComplexity">
            <property name="max" value="10" />
        </module>

        <module name="NPathComplexity">
            <property name="max" value="300" />
        </module>

        <module name="ClassFanOutComplexity">
            <property name="max" value="45" />
        </module>

        <module name="Indentation">
            <property name="basicOffset" value="4" />
            <property name="braceAdjustment" value="0" />
            <property name="caseIndent" value="4" />
            <property name="arrayInitIndent" value="8" />
        </module>

        <module name="ReturnCount">
            <property name="max" value="1" />
        </module>

        <module name="BooleanExpressionComplexity" />

        <!-- <module name="ClassDataAbstractionCoupling"/> -->

        <module name="InnerTypeLast" />

        <module name="MutableException" />

        <module name="NestedForDepthCheck">
            <property name="max" value="1" />
        </module>

        <module name="NestedIfDepth">
            <property name="max" value="1" />
        </module>

        <module name="NestedTryDepth">
            <property name="max" value="1"/>
        </module>


        <module name="OneStatementPerLine" />

        <module name="RequireThis" />

        <!-- Para ignorar los números mágicos en las anotaciones. En una anotación, que es algo muy de “metadata”, si aparece 
            un número me arriesgo a pensar que en un 99% de los casos no será algo de negocio si no algo de configuración. -->

        <module name="MagicNumber">
            <property name="ignoreAnnotation" value="true" />
        </module>

        <!-- Incluir classes excluidas -->

        <module name="ClassDataAbstractionCoupling">
            <property name="max" value="12"/>
            <property name="excludedClasses"
                value="boolean, byte, char, double, float, int, long, short, void, Boolean, Byte, Character, Double, Float, Integer, Long, Short, Void, Object, Class, String, StringBuffer, StringBuilder, ArrayIndexOutOfBoundsException, Exception, RuntimeException, IllegalArgumentException, IllegalStateException, IndexOutOfBoundsException, NullPointerException, Throwable, SecurityException, UnsupportedOperationException, List, ArrayList, Vector, Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map, HashMap, SortedMap, TreeMap, Date, File, InputStream, OutputStream, FileInputStream, FileOutputStream, OutputStreamWriter, InputStreamReader, StringReader, StringWriter, FileWriter, FileReader, Reader, Writer, BufferedReader, BufferedWriter, ByteArrayOutputStream, ByteArrayInputStream, DataInputStream, DataOutputStream, IOException, InputSource, StreamSource, UrlResource" />
        </module>

        <!-- Evitamos que en los seters y constructores nos muestre el warning de que estamos ocultando nombres de atributos 
            con los parámetros. -->

        <!-- <module name="HiddenField"> -->
        <!-- <property name="ignoreSetter" value="true"/> -->
        <!-- <property name="ignoreConstructorParameter" value="true"/> -->
        <!-- </module> -->


        <!--arregla un bug del formateador de Eclipse que pone un espacio en blanco en anotaciones anidadas -->
        <module name="ParenPad">
            <property name="tokens"
                value="ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL" />
        </module>

        <!-- Evita el uso de esta clausula -->
        <module name="SuppressWarnings" />

        <!-- Evita que no se ponga breaks en los switch -->
        <module name="FallThrough" />

        <!-- Obliga a poner los metodos con mismo nombre en el mismo orden -->
        <module name="OverloadMethodsDeclarationOrder" />

        <!-- Obliga a poner cada declaracion en diferente linea -->
        <module name="MultipleVariableDeclarations" />

    </module>

</module>